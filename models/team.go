// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Team team
// swagger:model Team
type Team struct {

	// Team avatar image.
	Avatar strfmt.Base64 `json:"avatar,omitempty"`

	// Team avatar url.
	AvatarURL string `json:"avatar_url,omitempty"`

	// UUID of a user that created this team.
	CreatedBy string `json:"created_by,omitempty"`

	// Team description
	Description string `json:"description,omitempty"`

	// Team unique identifier expressed as UUID.
	ID string `json:"id,omitempty"`

	// Team location.
	Location string `json:"location,omitempty"`

	// Team name
	Name string `json:"name,omitempty"`

	// Teams website.
	Website string `json:"website,omitempty"`
}

// Validate validates this team
func (m *Team) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAvatar(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Team) validateAvatar(formats strfmt.Registry) error {

	if swag.IsZero(m.Avatar) { // not required
		return nil
	}

	if err := validate.FormatOf("avatar", "body", "byte", m.Avatar.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Team) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Team) UnmarshalBinary(b []byte) error {
	var res Team
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

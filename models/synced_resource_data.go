// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SyncedResourceData synced resource data
// swagger:model SyncedResourceData
type SyncedResourceData struct {

	// Folder to sync.
	// Required: true
	Folder *string `json:"folder"`

	// Provider name.
	// Required: true
	Provider *string `json:"provider"`

	// Sync settins.
	Settings interface{} `json:"settings,omitempty"`
}

// Validate validates this synced resource data
func (m *SyncedResourceData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFolder(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateProvider(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SyncedResourceData) validateFolder(formats strfmt.Registry) error {

	if err := validate.Required("folder", "body", m.Folder); err != nil {
		return err
	}

	return nil
}

func (m *SyncedResourceData) validateProvider(formats strfmt.Registry) error {

	if err := validate.Required("provider", "body", m.Provider); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SyncedResourceData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SyncedResourceData) UnmarshalBinary(b []byte) error {
	var res SyncedResourceData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

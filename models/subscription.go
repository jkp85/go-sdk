package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Subscription subscription
// swagger:model Subscription
type Subscription struct {

	// application fee percent
	ApplicationFeePercent float64 `json:"application_fee_percent,omitempty"`

	// cancel at period end
	CancelAtPeriodEnd bool `json:"cancel_at_period_end,omitempty"`

	// canceled at
	CanceledAt string `json:"canceled_at,omitempty"`

	// created
	Created string `json:"created,omitempty"`

	// current period end
	CurrentPeriodEnd string `json:"current_period_end,omitempty"`

	// current period start
	CurrentPeriodStart string `json:"current_period_start,omitempty"`

	// ended at
	EndedAt string `json:"ended_at,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// livemode
	Livemode bool `json:"livemode,omitempty"`

	// plan
	// Required: true
	Plan *string `json:"plan"`

	// quantity
	Quantity int64 `json:"quantity,omitempty"`

	// start
	Start string `json:"start,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// stripe id
	StripeID string `json:"stripe_id,omitempty"`

	// trial end
	TrialEnd string `json:"trial_end,omitempty"`

	// trial start
	TrialStart string `json:"trial_start,omitempty"`
}

// Validate validates this subscription
func (m *Subscription) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePlan(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Subscription) validatePlan(formats strfmt.Registry) error {

	if err := validate.Required("plan", "body", m.Plan); err != nil {
		return err
	}

	return nil
}

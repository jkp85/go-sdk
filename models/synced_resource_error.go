// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SyncedResourceError synced resource error
// swagger:model SyncedResourceError
type SyncedResourceError struct {

	// folder field errors
	Folder []string `json:"folder"`

	// Errors not connected to any field
	NonFieldErrors []string `json:"non_field_errors"`

	// provider field errors
	Provider []string `json:"provider"`

	// settings field errors
	Settings []string `json:"settings"`
}

// Validate validates this synced resource error
func (m *SyncedResourceError) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFolder(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateNonFieldErrors(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateProvider(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSettings(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SyncedResourceError) validateFolder(formats strfmt.Registry) error {

	if swag.IsZero(m.Folder) { // not required
		return nil
	}

	return nil
}

func (m *SyncedResourceError) validateNonFieldErrors(formats strfmt.Registry) error {

	if swag.IsZero(m.NonFieldErrors) { // not required
		return nil
	}

	return nil
}

func (m *SyncedResourceError) validateProvider(formats strfmt.Registry) error {

	if swag.IsZero(m.Provider) { // not required
		return nil
	}

	return nil
}

func (m *SyncedResourceError) validateSettings(formats strfmt.Registry) error {

	if swag.IsZero(m.Settings) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SyncedResourceError) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SyncedResourceError) UnmarshalBinary(b []byte) error {
	var res SyncedResourceError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// IntegrationError integration error
// swagger:model IntegrationError
type IntegrationError struct {

	// Extra data field errors.
	ExtraData []string `json:"extra_data"`

	// Errors not connected to any field.
	NonFieldErrors []string `json:"non_field_errors"`

	// Provider field errors.
	Provider []string `json:"provider"`
}

// Validate validates this integration error
func (m *IntegrationError) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExtraData(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateNonFieldErrors(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateProvider(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IntegrationError) validateExtraData(formats strfmt.Registry) error {

	if swag.IsZero(m.ExtraData) { // not required
		return nil
	}

	return nil
}

func (m *IntegrationError) validateNonFieldErrors(formats strfmt.Registry) error {

	if swag.IsZero(m.NonFieldErrors) { // not required
		return nil
	}

	return nil
}

func (m *IntegrationError) validateProvider(formats strfmt.Registry) error {

	if swag.IsZero(m.Provider) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IntegrationError) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IntegrationError) UnmarshalBinary(b []byte) error {
	var res IntegrationError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

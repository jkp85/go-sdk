package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IllumiDesk/go-sdk/models"
)

// TeamsUpdateReader is a Reader for the TeamsUpdate structure.
type TeamsUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TeamsUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTeamsUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewTeamsUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewTeamsUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTeamsUpdateOK creates a TeamsUpdateOK with default headers values
func NewTeamsUpdateOK() *TeamsUpdateOK {
	return &TeamsUpdateOK{}
}

/*TeamsUpdateOK handles this case with default header values.

Team updated
*/
type TeamsUpdateOK struct {
	Payload *models.Team
}

func (o *TeamsUpdateOK) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/teams/{team}/][%d] teamsUpdateOK  %+v", 200, o.Payload)
}

func (o *TeamsUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Team)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsUpdateBadRequest creates a TeamsUpdateBadRequest with default headers values
func NewTeamsUpdateBadRequest() *TeamsUpdateBadRequest {
	return &TeamsUpdateBadRequest{}
}

/*TeamsUpdateBadRequest handles this case with default header values.

Invalid data supplied
*/
type TeamsUpdateBadRequest struct {
	Payload *models.TeamError
}

func (o *TeamsUpdateBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/teams/{team}/][%d] teamsUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *TeamsUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TeamError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsUpdateNotFound creates a TeamsUpdateNotFound with default headers values
func NewTeamsUpdateNotFound() *TeamsUpdateNotFound {
	return &TeamsUpdateNotFound{}
}

/*TeamsUpdateNotFound handles this case with default header values.

Team not found
*/
type TeamsUpdateNotFound struct {
	Payload *models.NotFound
}

func (o *TeamsUpdateNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsUpdateNotFound) Error() string {
	return fmt.Sprintf("[PATCH /v1/teams/{team}/][%d] teamsUpdateNotFound  %+v", 404, o.Payload)
}

func (o *TeamsUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

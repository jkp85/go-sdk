package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// ServiceTriggerPartialUpdateReader is a Reader for the ServiceTriggerPartialUpdate structure.
type ServiceTriggerPartialUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceTriggerPartialUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewServiceTriggerPartialUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewServiceTriggerPartialUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewServiceTriggerPartialUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewServiceTriggerPartialUpdateOK creates a ServiceTriggerPartialUpdateOK with default headers values
func NewServiceTriggerPartialUpdateOK() *ServiceTriggerPartialUpdateOK {
	return &ServiceTriggerPartialUpdateOK{}
}

/*ServiceTriggerPartialUpdateOK handles this case with default header values.

ServerAction updated
*/
type ServiceTriggerPartialUpdateOK struct {
	Payload *models.ServerAction
}

func (o *ServiceTriggerPartialUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /{namespace}/service/{server_pk}/trigger/{id}/][%d] serviceTriggerPartialUpdateOK  %+v", 200, o.Payload)
}

func (o *ServiceTriggerPartialUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerAction)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceTriggerPartialUpdateBadRequest creates a ServiceTriggerPartialUpdateBadRequest with default headers values
func NewServiceTriggerPartialUpdateBadRequest() *ServiceTriggerPartialUpdateBadRequest {
	return &ServiceTriggerPartialUpdateBadRequest{}
}

/*ServiceTriggerPartialUpdateBadRequest handles this case with default header values.

Invalid data supplied
*/
type ServiceTriggerPartialUpdateBadRequest struct {
	Payload ServiceTriggerPartialUpdateBadRequestBody
}

func (o *ServiceTriggerPartialUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /{namespace}/service/{server_pk}/trigger/{id}/][%d] serviceTriggerPartialUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *ServiceTriggerPartialUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceTriggerPartialUpdateNotFound creates a ServiceTriggerPartialUpdateNotFound with default headers values
func NewServiceTriggerPartialUpdateNotFound() *ServiceTriggerPartialUpdateNotFound {
	return &ServiceTriggerPartialUpdateNotFound{}
}

/*ServiceTriggerPartialUpdateNotFound handles this case with default header values.

ServerAction not found
*/
type ServiceTriggerPartialUpdateNotFound struct {
	Payload *models.NotFound
}

func (o *ServiceTriggerPartialUpdateNotFound) Error() string {
	return fmt.Sprintf("[PATCH /{namespace}/service/{server_pk}/trigger/{id}/][%d] serviceTriggerPartialUpdateNotFound  %+v", 404, o.Payload)
}

func (o *ServiceTriggerPartialUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ServiceTriggerPartialUpdateBadRequestBody service trigger partial update bad request body
swagger:model ServiceTriggerPartialUpdateBadRequestBody
*/
type ServiceTriggerPartialUpdateBadRequestBody struct {

	// id field errors
	// Required: true
	ID []string `json:"id"`

	// name field errors
	// Required: true
	Name []string `json:"name"`

	// Errors not connected to any field
	// Required: true
	NonFieldErrors []string `json:"non_field_errors"`

	// operation field errors
	// Required: true
	Operation []string `json:"operation"`
}

// Validate validates this service trigger partial update bad request body
func (o *ServiceTriggerPartialUpdateBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateNonFieldErrors(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateOperation(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ServiceTriggerPartialUpdateBadRequestBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("serviceTriggerPartialUpdateBadRequest"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *ServiceTriggerPartialUpdateBadRequestBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("serviceTriggerPartialUpdateBadRequest"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *ServiceTriggerPartialUpdateBadRequestBody) validateNonFieldErrors(formats strfmt.Registry) error {

	if err := validate.Required("serviceTriggerPartialUpdateBadRequest"+"."+"non_field_errors", "body", o.NonFieldErrors); err != nil {
		return err
	}

	return nil
}

func (o *ServiceTriggerPartialUpdateBadRequestBody) validateOperation(formats strfmt.Registry) error {

	if err := validate.Required("serviceTriggerPartialUpdateBadRequest"+"."+"operation", "body", o.Operation); err != nil {
		return err
	}

	return nil
}

/*ServiceTriggerPartialUpdateBody service trigger partial update body
swagger:model ServiceTriggerPartialUpdateBody
*/
type ServiceTriggerPartialUpdateBody struct {

	// name
	Name string `json:"name,omitempty"`

	// operation
	Operation string `json:"operation,omitempty"`
}

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IllumiDesk/go-sdk/models"
)

// ServersOptionsServerSizeUpdateReader is a Reader for the ServersOptionsServerSizeUpdate structure.
type ServersOptionsServerSizeUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServersOptionsServerSizeUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewServersOptionsServerSizeUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewServersOptionsServerSizeUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewServersOptionsServerSizeUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewServersOptionsServerSizeUpdateOK creates a ServersOptionsServerSizeUpdateOK with default headers values
func NewServersOptionsServerSizeUpdateOK() *ServersOptionsServerSizeUpdateOK {
	return &ServersOptionsServerSizeUpdateOK{}
}

/*ServersOptionsServerSizeUpdateOK handles this case with default header values.

Server size updated. This operation is available only to super users.
*/
type ServersOptionsServerSizeUpdateOK struct {
	Payload *models.ServerSize
}

func (o *ServersOptionsServerSizeUpdateOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ServersOptionsServerSizeUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/servers/options/server-size/{size}/][%d] serversOptionsServerSizeUpdateOK  %+v", 200, o.Payload)
}

func (o *ServersOptionsServerSizeUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerSize)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersOptionsServerSizeUpdateBadRequest creates a ServersOptionsServerSizeUpdateBadRequest with default headers values
func NewServersOptionsServerSizeUpdateBadRequest() *ServersOptionsServerSizeUpdateBadRequest {
	return &ServersOptionsServerSizeUpdateBadRequest{}
}

/*ServersOptionsServerSizeUpdateBadRequest handles this case with default header values.

Invalid data supplied.
*/
type ServersOptionsServerSizeUpdateBadRequest struct {
	Payload *models.ServerSizeError
}

func (o *ServersOptionsServerSizeUpdateBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *ServersOptionsServerSizeUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/servers/options/server-size/{size}/][%d] serversOptionsServerSizeUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *ServersOptionsServerSizeUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerSizeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersOptionsServerSizeUpdateNotFound creates a ServersOptionsServerSizeUpdateNotFound with default headers values
func NewServersOptionsServerSizeUpdateNotFound() *ServersOptionsServerSizeUpdateNotFound {
	return &ServersOptionsServerSizeUpdateNotFound{}
}

/*ServersOptionsServerSizeUpdateNotFound handles this case with default header values.

Server size not found.
*/
type ServersOptionsServerSizeUpdateNotFound struct {
	Payload *models.NotFound
}

func (o *ServersOptionsServerSizeUpdateNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ServersOptionsServerSizeUpdateNotFound) Error() string {
	return fmt.Sprintf("[PATCH /v1/servers/options/server-size/{size}/][%d] serversOptionsServerSizeUpdateNotFound  %+v", 404, o.Payload)
}

func (o *ServersOptionsServerSizeUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkp85/go-sdk/models"
)

// ServersOptionsTypesUpdateReader is a Reader for the ServersOptionsTypesUpdate structure.
type ServersOptionsTypesUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServersOptionsTypesUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewServersOptionsTypesUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewServersOptionsTypesUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewServersOptionsTypesUpdateOK creates a ServersOptionsTypesUpdateOK with default headers values
func NewServersOptionsTypesUpdateOK() *ServersOptionsTypesUpdateOK {
	return &ServersOptionsTypesUpdateOK{}
}

/*ServersOptionsTypesUpdateOK handles this case with default header values.

EnvironmentType updated
*/
type ServersOptionsTypesUpdateOK struct {
	Payload *models.EnvironmentType
}

func (o *ServersOptionsTypesUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /api/v0/{namespace}/servers/options/types/{id}/][%d] serversOptionsTypesUpdateOK  %+v", 200, o.Payload)
}

func (o *ServersOptionsTypesUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EnvironmentType)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersOptionsTypesUpdateBadRequest creates a ServersOptionsTypesUpdateBadRequest with default headers values
func NewServersOptionsTypesUpdateBadRequest() *ServersOptionsTypesUpdateBadRequest {
	return &ServersOptionsTypesUpdateBadRequest{}
}

/*ServersOptionsTypesUpdateBadRequest handles this case with default header values.

Invalid data supplied
*/
type ServersOptionsTypesUpdateBadRequest struct {
}

func (o *ServersOptionsTypesUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v0/{namespace}/servers/options/types/{id}/][%d] serversOptionsTypesUpdateBadRequest ", 400)
}

func (o *ServersOptionsTypesUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*ServersOptionsTypesUpdateBody servers options types update body
swagger:model ServersOptionsTypesUpdateBody
*/
type ServersOptionsTypesUpdateBody struct {

	// cmd
	Cmd string `json:"cmd,omitempty"`

	// container path
	ContainerPath string `json:"container_path,omitempty"`

	// container port
	ContainerPort int64 `json:"container_port,omitempty"`

	// image name
	// Required: true
	ImageName *string `json:"image_name"`

	// name
	// Required: true
	Name *string `json:"name"`

	// type
	// Required: true
	Type *string `json:"type"`

	// work dir
	WorkDir string `json:"work_dir,omitempty"`
}

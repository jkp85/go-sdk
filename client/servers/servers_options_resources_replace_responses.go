// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// ServersOptionsResourcesReplaceReader is a Reader for the ServersOptionsResourcesReplace structure.
type ServersOptionsResourcesReplaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServersOptionsResourcesReplaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewServersOptionsResourcesReplaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewServersOptionsResourcesReplaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewServersOptionsResourcesReplaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewServersOptionsResourcesReplaceOK creates a ServersOptionsResourcesReplaceOK with default headers values
func NewServersOptionsResourcesReplaceOK() *ServersOptionsResourcesReplaceOK {
	return &ServersOptionsResourcesReplaceOK{}
}

/*ServersOptionsResourcesReplaceOK handles this case with default header values.

EnvironmentResource updated
*/
type ServersOptionsResourcesReplaceOK struct {
	Payload *models.EnvironmentResource
}

func (o *ServersOptionsResourcesReplaceOK) Error() string {
	return fmt.Sprintf("[PUT /v1/{namespace}/servers/options/resources/{id}/][%d] serversOptionsResourcesReplaceOK  %+v", 200, o.Payload)
}

func (o *ServersOptionsResourcesReplaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EnvironmentResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersOptionsResourcesReplaceBadRequest creates a ServersOptionsResourcesReplaceBadRequest with default headers values
func NewServersOptionsResourcesReplaceBadRequest() *ServersOptionsResourcesReplaceBadRequest {
	return &ServersOptionsResourcesReplaceBadRequest{}
}

/*ServersOptionsResourcesReplaceBadRequest handles this case with default header values.

Invalid data supplied.
*/
type ServersOptionsResourcesReplaceBadRequest struct {
	Payload *models.EnvironmentResourceError
}

func (o *ServersOptionsResourcesReplaceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/{namespace}/servers/options/resources/{id}/][%d] serversOptionsResourcesReplaceBadRequest  %+v", 400, o.Payload)
}

func (o *ServersOptionsResourcesReplaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EnvironmentResourceError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersOptionsResourcesReplaceNotFound creates a ServersOptionsResourcesReplaceNotFound with default headers values
func NewServersOptionsResourcesReplaceNotFound() *ServersOptionsResourcesReplaceNotFound {
	return &ServersOptionsResourcesReplaceNotFound{}
}

/*ServersOptionsResourcesReplaceNotFound handles this case with default header values.

EnvironmentResource not found
*/
type ServersOptionsResourcesReplaceNotFound struct {
	Payload *models.NotFound
}

func (o *ServersOptionsResourcesReplaceNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/{namespace}/servers/options/resources/{id}/][%d] serversOptionsResourcesReplaceNotFound  %+v", 404, o.Payload)
}

func (o *ServersOptionsResourcesReplaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

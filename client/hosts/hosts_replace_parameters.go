// Code generated by go-swagger; DO NOT EDIT.

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// NewHostsReplaceParams creates a new HostsReplaceParams object
// with the default values initialized.
func NewHostsReplaceParams() *HostsReplaceParams {
	var ()
	return &HostsReplaceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewHostsReplaceParamsWithTimeout creates a new HostsReplaceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewHostsReplaceParamsWithTimeout(timeout time.Duration) *HostsReplaceParams {
	var ()
	return &HostsReplaceParams{

		timeout: timeout,
	}
}

// NewHostsReplaceParamsWithContext creates a new HostsReplaceParams object
// with the default values initialized, and the ability to set a context for a request
func NewHostsReplaceParamsWithContext(ctx context.Context) *HostsReplaceParams {
	var ()
	return &HostsReplaceParams{

		Context: ctx,
	}
}

// NewHostsReplaceParamsWithHTTPClient creates a new HostsReplaceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewHostsReplaceParamsWithHTTPClient(client *http.Client) *HostsReplaceParams {
	var ()
	return &HostsReplaceParams{
		HTTPClient: client,
	}
}

/*HostsReplaceParams contains all the parameters to send to the API endpoint
for the hosts replace operation typically these are written to a http.Request
*/
type HostsReplaceParams struct {

	/*DockerhostData*/
	DockerhostData *models.DockerHostData
	/*Host*/
	Host string
	/*Namespace
	  User or team name.

	*/
	Namespace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the hosts replace params
func (o *HostsReplaceParams) WithTimeout(timeout time.Duration) *HostsReplaceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the hosts replace params
func (o *HostsReplaceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the hosts replace params
func (o *HostsReplaceParams) WithContext(ctx context.Context) *HostsReplaceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the hosts replace params
func (o *HostsReplaceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the hosts replace params
func (o *HostsReplaceParams) WithHTTPClient(client *http.Client) *HostsReplaceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the hosts replace params
func (o *HostsReplaceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDockerhostData adds the dockerhostData to the hosts replace params
func (o *HostsReplaceParams) WithDockerhostData(dockerhostData *models.DockerHostData) *HostsReplaceParams {
	o.SetDockerhostData(dockerhostData)
	return o
}

// SetDockerhostData adds the dockerhostData to the hosts replace params
func (o *HostsReplaceParams) SetDockerhostData(dockerhostData *models.DockerHostData) {
	o.DockerhostData = dockerhostData
}

// WithHost adds the host to the hosts replace params
func (o *HostsReplaceParams) WithHost(host string) *HostsReplaceParams {
	o.SetHost(host)
	return o
}

// SetHost adds the host to the hosts replace params
func (o *HostsReplaceParams) SetHost(host string) {
	o.Host = host
}

// WithNamespace adds the namespace to the hosts replace params
func (o *HostsReplaceParams) WithNamespace(namespace string) *HostsReplaceParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the hosts replace params
func (o *HostsReplaceParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WriteToRequest writes these params to a swagger request
func (o *HostsReplaceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DockerhostData == nil {
		o.DockerhostData = new(models.DockerHostData)
	}

	if err := r.SetBodyParam(o.DockerhostData); err != nil {
		return err
	}

	// path param host
	if err := r.SetPathParam("host", o.Host); err != nil {
		return err
	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

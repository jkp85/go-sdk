// Code generated by go-swagger; DO NOT EDIT.

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// HostsCreateReader is a Reader for the HostsCreate structure.
type HostsCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HostsCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewHostsCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewHostsCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewHostsCreateCreated creates a HostsCreateCreated with default headers values
func NewHostsCreateCreated() *HostsCreateCreated {
	return &HostsCreateCreated{}
}

/*HostsCreateCreated handles this case with default header values.

DockerHost created successfully.
*/
type HostsCreateCreated struct {
	Payload *models.DockerHost
}

func (o *HostsCreateCreated) Error() string {
	return fmt.Sprintf("[POST /v1/{namespace}/hosts/][%d] hostsCreateCreated  %+v", 201, o.Payload)
}

func (o *HostsCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DockerHost)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHostsCreateBadRequest creates a HostsCreateBadRequest with default headers values
func NewHostsCreateBadRequest() *HostsCreateBadRequest {
	return &HostsCreateBadRequest{}
}

/*HostsCreateBadRequest handles this case with default header values.

Invalid data supplied.
*/
type HostsCreateBadRequest struct {
	Payload *models.DockerHostError
}

func (o *HostsCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/{namespace}/hosts/][%d] hostsCreateBadRequest  %+v", 400, o.Payload)
}

func (o *HostsCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DockerHostError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

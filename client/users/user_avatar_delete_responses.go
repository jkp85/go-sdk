// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// UserAvatarDeleteReader is a Reader for the UserAvatarDelete structure.
type UserAvatarDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserAvatarDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewUserAvatarDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewUserAvatarDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserAvatarDeleteNoContent creates a UserAvatarDeleteNoContent with default headers values
func NewUserAvatarDeleteNoContent() *UserAvatarDeleteNoContent {
	return &UserAvatarDeleteNoContent{}
}

/*UserAvatarDeleteNoContent handles this case with default header values.

Avatar deleted
*/
type UserAvatarDeleteNoContent struct {
}

func (o *UserAvatarDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{user}/avatar/][%d] userAvatarDeleteNoContent ", 204)
}

func (o *UserAvatarDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserAvatarDeleteNotFound creates a UserAvatarDeleteNotFound with default headers values
func NewUserAvatarDeleteNotFound() *UserAvatarDeleteNotFound {
	return &UserAvatarDeleteNotFound{}
}

/*UserAvatarDeleteNotFound handles this case with default header values.

Avatar not found
*/
type UserAvatarDeleteNotFound struct {
	Payload *models.NotFound
}

func (o *UserAvatarDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{user}/avatar/][%d] userAvatarDeleteNotFound  %+v", 404, o.Payload)
}

func (o *UserAvatarDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// UserAvatarSetReader is a Reader for the UserAvatarSet structure.
type UserAvatarSetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserAvatarSetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewUserAvatarSetCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUserAvatarSetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserAvatarSetCreated creates a UserAvatarSetCreated with default headers values
func NewUserAvatarSetCreated() *UserAvatarSetCreated {
	return &UserAvatarSetCreated{}
}

/*UserAvatarSetCreated handles this case with default header values.

Added user avatar
*/
type UserAvatarSetCreated struct {
	Payload *models.User
}

func (o *UserAvatarSetCreated) Error() string {
	return fmt.Sprintf("[POST /v1/users/{user_id}/avatar/][%d] userAvatarSetCreated  %+v", 201, o.Payload)
}

func (o *UserAvatarSetCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserAvatarSetBadRequest creates a UserAvatarSetBadRequest with default headers values
func NewUserAvatarSetBadRequest() *UserAvatarSetBadRequest {
	return &UserAvatarSetBadRequest{}
}

/*UserAvatarSetBadRequest handles this case with default header values.

Invalid data supplied
*/
type UserAvatarSetBadRequest struct {
}

func (o *UserAvatarSetBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/users/{user_id}/avatar/][%d] userAvatarSetBadRequest ", 400)
}

func (o *UserAvatarSetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

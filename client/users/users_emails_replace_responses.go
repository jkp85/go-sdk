// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// UsersEmailsReplaceReader is a Reader for the UsersEmailsReplace structure.
type UsersEmailsReplaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersEmailsReplaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUsersEmailsReplaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUsersEmailsReplaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUsersEmailsReplaceOK creates a UsersEmailsReplaceOK with default headers values
func NewUsersEmailsReplaceOK() *UsersEmailsReplaceOK {
	return &UsersEmailsReplaceOK{}
}

/*UsersEmailsReplaceOK handles this case with default header values.

Email updated
*/
type UsersEmailsReplaceOK struct {
	Payload *models.Email
}

func (o *UsersEmailsReplaceOK) Error() string {
	return fmt.Sprintf("[PUT /v1/users/{user_id}/emails/{email_id}/][%d] usersEmailsReplaceOK  %+v", 200, o.Payload)
}

func (o *UsersEmailsReplaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Email)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersEmailsReplaceBadRequest creates a UsersEmailsReplaceBadRequest with default headers values
func NewUsersEmailsReplaceBadRequest() *UsersEmailsReplaceBadRequest {
	return &UsersEmailsReplaceBadRequest{}
}

/*UsersEmailsReplaceBadRequest handles this case with default header values.

Invalid data supplied
*/
type UsersEmailsReplaceBadRequest struct {
	Payload *models.EmailError
}

func (o *UsersEmailsReplaceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/users/{user_id}/emails/{email_id}/][%d] usersEmailsReplaceBadRequest  %+v", 400, o.Payload)
}

func (o *UsersEmailsReplaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

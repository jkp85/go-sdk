package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// UsersIntegrationsReadReader is a Reader for the UsersIntegrationsRead structure.
type UsersIntegrationsReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersIntegrationsReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUsersIntegrationsReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewUsersIntegrationsReadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUsersIntegrationsReadOK creates a UsersIntegrationsReadOK with default headers values
func NewUsersIntegrationsReadOK() *UsersIntegrationsReadOK {
	return &UsersIntegrationsReadOK{}
}

/*UsersIntegrationsReadOK handles this case with default header values.

Integration retrieved
*/
type UsersIntegrationsReadOK struct {
	Payload *models.Integration
}

func (o *UsersIntegrationsReadOK) Error() string {
	return fmt.Sprintf("[GET /api/v0/{namespace}/users/{user_pk}/integrations/{id}/][%d] usersIntegrationsReadOK  %+v", 200, o.Payload)
}

func (o *UsersIntegrationsReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Integration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersIntegrationsReadNotFound creates a UsersIntegrationsReadNotFound with default headers values
func NewUsersIntegrationsReadNotFound() *UsersIntegrationsReadNotFound {
	return &UsersIntegrationsReadNotFound{}
}

/*UsersIntegrationsReadNotFound handles this case with default header values.

Integration not found
*/
type UsersIntegrationsReadNotFound struct {
	Payload *models.NotFound
}

func (o *UsersIntegrationsReadNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v0/{namespace}/users/{user_pk}/integrations/{id}/][%d] usersIntegrationsReadNotFound  %+v", 404, o.Payload)
}

func (o *UsersIntegrationsReadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// TokenCreateReader is a Reader for the TokenCreate structure.
type TokenCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TokenCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewTokenCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewTokenCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTokenCreateCreated creates a TokenCreateCreated with default headers values
func NewTokenCreateCreated() *TokenCreateCreated {
	return &TokenCreateCreated{}
}

/*TokenCreateCreated handles this case with default header values.

Token
*/
type TokenCreateCreated struct {
}

func (o *TokenCreateCreated) Error() string {
	return fmt.Sprintf("[POST /api/v0/auth/token/][%d] tokenCreateCreated ", 201)
}

func (o *TokenCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTokenCreateBadRequest creates a TokenCreateBadRequest with default headers values
func NewTokenCreateBadRequest() *TokenCreateBadRequest {
	return &TokenCreateBadRequest{}
}

/*TokenCreateBadRequest handles this case with default header values.

Invalid data supplied
*/
type TokenCreateBadRequest struct {
}

func (o *TokenCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v0/auth/token/][%d] tokenCreateBadRequest ", 400)
}

func (o *TokenCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IllumiDesk/go-sdk/models"
)

// NewAuthJwtTokenVerifyParams creates a new AuthJwtTokenVerifyParams object
// with the default values initialized.
func NewAuthJwtTokenVerifyParams() *AuthJwtTokenVerifyParams {
	var ()
	return &AuthJwtTokenVerifyParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAuthJwtTokenVerifyParamsWithTimeout creates a new AuthJwtTokenVerifyParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAuthJwtTokenVerifyParamsWithTimeout(timeout time.Duration) *AuthJwtTokenVerifyParams {
	var ()
	return &AuthJwtTokenVerifyParams{

		timeout: timeout,
	}
}

// NewAuthJwtTokenVerifyParamsWithContext creates a new AuthJwtTokenVerifyParams object
// with the default values initialized, and the ability to set a context for a request
func NewAuthJwtTokenVerifyParamsWithContext(ctx context.Context) *AuthJwtTokenVerifyParams {
	var ()
	return &AuthJwtTokenVerifyParams{

		Context: ctx,
	}
}

// NewAuthJwtTokenVerifyParamsWithHTTPClient creates a new AuthJwtTokenVerifyParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAuthJwtTokenVerifyParamsWithHTTPClient(client *http.Client) *AuthJwtTokenVerifyParams {
	var ()
	return &AuthJwtTokenVerifyParams{
		HTTPClient: client,
	}
}

/*AuthJwtTokenVerifyParams contains all the parameters to send to the API endpoint
for the auth jwt token verify operation typically these are written to a http.Request
*/
type AuthJwtTokenVerifyParams struct {

	/*VerifyjwtData*/
	VerifyjwtData *models.VerifyJSONWebTokenData

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the auth jwt token verify params
func (o *AuthJwtTokenVerifyParams) WithTimeout(timeout time.Duration) *AuthJwtTokenVerifyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the auth jwt token verify params
func (o *AuthJwtTokenVerifyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the auth jwt token verify params
func (o *AuthJwtTokenVerifyParams) WithContext(ctx context.Context) *AuthJwtTokenVerifyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the auth jwt token verify params
func (o *AuthJwtTokenVerifyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the auth jwt token verify params
func (o *AuthJwtTokenVerifyParams) WithHTTPClient(client *http.Client) *AuthJwtTokenVerifyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the auth jwt token verify params
func (o *AuthJwtTokenVerifyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithVerifyjwtData adds the verifyjwtData to the auth jwt token verify params
func (o *AuthJwtTokenVerifyParams) WithVerifyjwtData(verifyjwtData *models.VerifyJSONWebTokenData) *AuthJwtTokenVerifyParams {
	o.SetVerifyjwtData(verifyjwtData)
	return o
}

// SetVerifyjwtData adds the verifyjwtData to the auth jwt token verify params
func (o *AuthJwtTokenVerifyParams) SetVerifyjwtData(verifyjwtData *models.VerifyJSONWebTokenData) {
	o.VerifyjwtData = verifyjwtData
}

// WriteToRequest writes these params to a swagger request
func (o *AuthJwtTokenVerifyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.VerifyjwtData != nil {
		if err := r.SetBodyParam(o.VerifyjwtData); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

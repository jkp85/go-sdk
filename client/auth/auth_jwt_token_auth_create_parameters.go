package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewAuthJwtTokenAuthCreateParams creates a new AuthJwtTokenAuthCreateParams object
// with the default values initialized.
func NewAuthJwtTokenAuthCreateParams() *AuthJwtTokenAuthCreateParams {
	var ()
	return &AuthJwtTokenAuthCreateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAuthJwtTokenAuthCreateParamsWithTimeout creates a new AuthJwtTokenAuthCreateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAuthJwtTokenAuthCreateParamsWithTimeout(timeout time.Duration) *AuthJwtTokenAuthCreateParams {
	var ()
	return &AuthJwtTokenAuthCreateParams{

		timeout: timeout,
	}
}

// NewAuthJwtTokenAuthCreateParamsWithContext creates a new AuthJwtTokenAuthCreateParams object
// with the default values initialized, and the ability to set a context for a request
func NewAuthJwtTokenAuthCreateParamsWithContext(ctx context.Context) *AuthJwtTokenAuthCreateParams {
	var ()
	return &AuthJwtTokenAuthCreateParams{

		Context: ctx,
	}
}

// NewAuthJwtTokenAuthCreateParamsWithHTTPClient creates a new AuthJwtTokenAuthCreateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAuthJwtTokenAuthCreateParamsWithHTTPClient(client *http.Client) *AuthJwtTokenAuthCreateParams {
	var ()
	return &AuthJwtTokenAuthCreateParams{
		HTTPClient: client,
	}
}

/*AuthJwtTokenAuthCreateParams contains all the parameters to send to the API endpoint
for the auth jwt token auth create operation typically these are written to a http.Request
*/
type AuthJwtTokenAuthCreateParams struct {

	/*Data*/
	Data AuthJwtTokenAuthCreateBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the auth jwt token auth create params
func (o *AuthJwtTokenAuthCreateParams) WithTimeout(timeout time.Duration) *AuthJwtTokenAuthCreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the auth jwt token auth create params
func (o *AuthJwtTokenAuthCreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the auth jwt token auth create params
func (o *AuthJwtTokenAuthCreateParams) WithContext(ctx context.Context) *AuthJwtTokenAuthCreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the auth jwt token auth create params
func (o *AuthJwtTokenAuthCreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the auth jwt token auth create params
func (o *AuthJwtTokenAuthCreateParams) WithHTTPClient(client *http.Client) *AuthJwtTokenAuthCreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the auth jwt token auth create params
func (o *AuthJwtTokenAuthCreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithData adds the data to the auth jwt token auth create params
func (o *AuthJwtTokenAuthCreateParams) WithData(data AuthJwtTokenAuthCreateBody) *AuthJwtTokenAuthCreateParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the auth jwt token auth create params
func (o *AuthJwtTokenAuthCreateParams) SetData(data AuthJwtTokenAuthCreateBody) {
	o.Data = data
}

// WriteToRequest writes these params to a swagger request
func (o *AuthJwtTokenAuthCreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if err := r.SetBodyParam(o.Data); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

package billing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// BillingCustomersUpdateReader is a Reader for the BillingCustomersUpdate structure.
type BillingCustomersUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BillingCustomersUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewBillingCustomersUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewBillingCustomersUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewBillingCustomersUpdateOK creates a BillingCustomersUpdateOK with default headers values
func NewBillingCustomersUpdateOK() *BillingCustomersUpdateOK {
	return &BillingCustomersUpdateOK{}
}

/*BillingCustomersUpdateOK handles this case with default header values.

Customer updated
*/
type BillingCustomersUpdateOK struct {
	Payload *models.Customer
}

func (o *BillingCustomersUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /{namespace}/billing/customers/{id}/][%d] billingCustomersUpdateOK  %+v", 200, o.Payload)
}

func (o *BillingCustomersUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Customer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBillingCustomersUpdateBadRequest creates a BillingCustomersUpdateBadRequest with default headers values
func NewBillingCustomersUpdateBadRequest() *BillingCustomersUpdateBadRequest {
	return &BillingCustomersUpdateBadRequest{}
}

/*BillingCustomersUpdateBadRequest handles this case with default header values.

Invalid data supplied
*/
type BillingCustomersUpdateBadRequest struct {
	Payload BillingCustomersUpdateBadRequestBody
}

func (o *BillingCustomersUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /{namespace}/billing/customers/{id}/][%d] billingCustomersUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *BillingCustomersUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*BillingCustomersUpdateBadRequestBody billing customers update bad request body
swagger:model BillingCustomersUpdateBadRequestBody
*/
type BillingCustomersUpdateBadRequestBody struct {

	// account_balance field errors
	// Required: true
	AccountBalance []string `json:"account_balance"`

	// created field errors
	// Required: true
	Created []string `json:"created"`

	// currency field errors
	// Required: true
	Currency []string `json:"currency"`

	// default_source field errors
	// Required: true
	DefaultSource []string `json:"default_source"`

	// id field errors
	// Required: true
	ID []string `json:"id"`

	// last_invoice_sync field errors
	// Required: true
	LastInvoiceSync []string `json:"last_invoice_sync"`

	// livemode field errors
	// Required: true
	Livemode []string `json:"livemode"`

	// metadata field errors
	// Required: true
	Metadata []string `json:"metadata"`

	// Errors not connected to any field
	// Required: true
	NonFieldErrors []string `json:"non_field_errors"`

	// stripe_id field errors
	// Required: true
	StripeID []string `json:"stripe_id"`

	// user field errors
	// Required: true
	User []string `json:"user"`
}

// Validate validates this billing customers update bad request body
func (o *BillingCustomersUpdateBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccountBalance(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateCreated(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateCurrency(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateDefaultSource(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLastInvoiceSync(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLivemode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateNonFieldErrors(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateStripeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateUser(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BillingCustomersUpdateBadRequestBody) validateAccountBalance(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersUpdateBadRequest"+"."+"account_balance", "body", o.AccountBalance); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersUpdateBadRequestBody) validateCreated(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersUpdateBadRequest"+"."+"created", "body", o.Created); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersUpdateBadRequestBody) validateCurrency(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersUpdateBadRequest"+"."+"currency", "body", o.Currency); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersUpdateBadRequestBody) validateDefaultSource(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersUpdateBadRequest"+"."+"default_source", "body", o.DefaultSource); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersUpdateBadRequestBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersUpdateBadRequest"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersUpdateBadRequestBody) validateLastInvoiceSync(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersUpdateBadRequest"+"."+"last_invoice_sync", "body", o.LastInvoiceSync); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersUpdateBadRequestBody) validateLivemode(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersUpdateBadRequest"+"."+"livemode", "body", o.Livemode); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersUpdateBadRequestBody) validateMetadata(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersUpdateBadRequest"+"."+"metadata", "body", o.Metadata); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersUpdateBadRequestBody) validateNonFieldErrors(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersUpdateBadRequest"+"."+"non_field_errors", "body", o.NonFieldErrors); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersUpdateBadRequestBody) validateStripeID(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersUpdateBadRequest"+"."+"stripe_id", "body", o.StripeID); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersUpdateBadRequestBody) validateUser(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersUpdateBadRequest"+"."+"user", "body", o.User); err != nil {
		return err
	}

	return nil
}

/*BillingCustomersUpdateBody billing customers update body
swagger:model BillingCustomersUpdateBody
*/
type BillingCustomersUpdateBody struct {

	// account balance
	AccountBalance int64 `json:"account_balance,omitempty"`

	// currency
	Currency string `json:"currency,omitempty"`

	// default source
	DefaultSource string `json:"default_source,omitempty"`

	// last invoice sync
	LastInvoiceSync string `json:"last_invoice_sync,omitempty"`

	// metadata
	Metadata interface{} `json:"metadata,omitempty"`

	// user
	// Required: true
	User *string `json:"user"`
}

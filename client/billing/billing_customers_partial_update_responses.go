package billing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// BillingCustomersPartialUpdateReader is a Reader for the BillingCustomersPartialUpdate structure.
type BillingCustomersPartialUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BillingCustomersPartialUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewBillingCustomersPartialUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewBillingCustomersPartialUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewBillingCustomersPartialUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewBillingCustomersPartialUpdateOK creates a BillingCustomersPartialUpdateOK with default headers values
func NewBillingCustomersPartialUpdateOK() *BillingCustomersPartialUpdateOK {
	return &BillingCustomersPartialUpdateOK{}
}

/*BillingCustomersPartialUpdateOK handles this case with default header values.

Customer updated
*/
type BillingCustomersPartialUpdateOK struct {
	Payload *models.Customer
}

func (o *BillingCustomersPartialUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /{namespace}/billing/customers/{id}/][%d] billingCustomersPartialUpdateOK  %+v", 200, o.Payload)
}

func (o *BillingCustomersPartialUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Customer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBillingCustomersPartialUpdateBadRequest creates a BillingCustomersPartialUpdateBadRequest with default headers values
func NewBillingCustomersPartialUpdateBadRequest() *BillingCustomersPartialUpdateBadRequest {
	return &BillingCustomersPartialUpdateBadRequest{}
}

/*BillingCustomersPartialUpdateBadRequest handles this case with default header values.

Invalid data supplied
*/
type BillingCustomersPartialUpdateBadRequest struct {
	Payload BillingCustomersPartialUpdateBadRequestBody
}

func (o *BillingCustomersPartialUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /{namespace}/billing/customers/{id}/][%d] billingCustomersPartialUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *BillingCustomersPartialUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBillingCustomersPartialUpdateNotFound creates a BillingCustomersPartialUpdateNotFound with default headers values
func NewBillingCustomersPartialUpdateNotFound() *BillingCustomersPartialUpdateNotFound {
	return &BillingCustomersPartialUpdateNotFound{}
}

/*BillingCustomersPartialUpdateNotFound handles this case with default header values.

Customer not found
*/
type BillingCustomersPartialUpdateNotFound struct {
	Payload *models.NotFound
}

func (o *BillingCustomersPartialUpdateNotFound) Error() string {
	return fmt.Sprintf("[PATCH /{namespace}/billing/customers/{id}/][%d] billingCustomersPartialUpdateNotFound  %+v", 404, o.Payload)
}

func (o *BillingCustomersPartialUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*BillingCustomersPartialUpdateBadRequestBody billing customers partial update bad request body
swagger:model BillingCustomersPartialUpdateBadRequestBody
*/
type BillingCustomersPartialUpdateBadRequestBody struct {

	// account_balance field errors
	// Required: true
	AccountBalance []string `json:"account_balance"`

	// created field errors
	// Required: true
	Created []string `json:"created"`

	// currency field errors
	// Required: true
	Currency []string `json:"currency"`

	// default_source field errors
	// Required: true
	DefaultSource []string `json:"default_source"`

	// id field errors
	// Required: true
	ID []string `json:"id"`

	// last_invoice_sync field errors
	// Required: true
	LastInvoiceSync []string `json:"last_invoice_sync"`

	// livemode field errors
	// Required: true
	Livemode []string `json:"livemode"`

	// metadata field errors
	// Required: true
	Metadata []string `json:"metadata"`

	// Errors not connected to any field
	// Required: true
	NonFieldErrors []string `json:"non_field_errors"`

	// stripe_id field errors
	// Required: true
	StripeID []string `json:"stripe_id"`

	// user field errors
	// Required: true
	User []string `json:"user"`
}

// Validate validates this billing customers partial update bad request body
func (o *BillingCustomersPartialUpdateBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccountBalance(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateCreated(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateCurrency(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateDefaultSource(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLastInvoiceSync(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLivemode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateNonFieldErrors(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateStripeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateUser(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BillingCustomersPartialUpdateBadRequestBody) validateAccountBalance(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersPartialUpdateBadRequest"+"."+"account_balance", "body", o.AccountBalance); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersPartialUpdateBadRequestBody) validateCreated(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersPartialUpdateBadRequest"+"."+"created", "body", o.Created); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersPartialUpdateBadRequestBody) validateCurrency(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersPartialUpdateBadRequest"+"."+"currency", "body", o.Currency); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersPartialUpdateBadRequestBody) validateDefaultSource(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersPartialUpdateBadRequest"+"."+"default_source", "body", o.DefaultSource); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersPartialUpdateBadRequestBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersPartialUpdateBadRequest"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersPartialUpdateBadRequestBody) validateLastInvoiceSync(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersPartialUpdateBadRequest"+"."+"last_invoice_sync", "body", o.LastInvoiceSync); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersPartialUpdateBadRequestBody) validateLivemode(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersPartialUpdateBadRequest"+"."+"livemode", "body", o.Livemode); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersPartialUpdateBadRequestBody) validateMetadata(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersPartialUpdateBadRequest"+"."+"metadata", "body", o.Metadata); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersPartialUpdateBadRequestBody) validateNonFieldErrors(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersPartialUpdateBadRequest"+"."+"non_field_errors", "body", o.NonFieldErrors); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersPartialUpdateBadRequestBody) validateStripeID(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersPartialUpdateBadRequest"+"."+"stripe_id", "body", o.StripeID); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersPartialUpdateBadRequestBody) validateUser(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersPartialUpdateBadRequest"+"."+"user", "body", o.User); err != nil {
		return err
	}

	return nil
}

/*BillingCustomersPartialUpdateBody billing customers partial update body
swagger:model BillingCustomersPartialUpdateBody
*/
type BillingCustomersPartialUpdateBody struct {

	// account balance
	AccountBalance int64 `json:"account_balance,omitempty"`

	// currency
	Currency string `json:"currency,omitempty"`

	// default source
	DefaultSource string `json:"default_source,omitempty"`

	// last invoice sync
	LastInvoiceSync string `json:"last_invoice_sync,omitempty"`

	// metadata
	Metadata interface{} `json:"metadata,omitempty"`

	// user
	User string `json:"user,omitempty"`
}

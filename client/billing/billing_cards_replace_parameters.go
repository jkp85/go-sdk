// Code generated by go-swagger; DO NOT EDIT.

package billing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// NewBillingCardsReplaceParams creates a new BillingCardsReplaceParams object
// with the default values initialized.
func NewBillingCardsReplaceParams() *BillingCardsReplaceParams {
	var ()
	return &BillingCardsReplaceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewBillingCardsReplaceParamsWithTimeout creates a new BillingCardsReplaceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewBillingCardsReplaceParamsWithTimeout(timeout time.Duration) *BillingCardsReplaceParams {
	var ()
	return &BillingCardsReplaceParams{

		timeout: timeout,
	}
}

// NewBillingCardsReplaceParamsWithContext creates a new BillingCardsReplaceParams object
// with the default values initialized, and the ability to set a context for a request
func NewBillingCardsReplaceParamsWithContext(ctx context.Context) *BillingCardsReplaceParams {
	var ()
	return &BillingCardsReplaceParams{

		Context: ctx,
	}
}

// NewBillingCardsReplaceParamsWithHTTPClient creates a new BillingCardsReplaceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewBillingCardsReplaceParamsWithHTTPClient(client *http.Client) *BillingCardsReplaceParams {
	var ()
	return &BillingCardsReplaceParams{
		HTTPClient: client,
	}
}

/*BillingCardsReplaceParams contains all the parameters to send to the API endpoint
for the billing cards replace operation typically these are written to a http.Request
*/
type BillingCardsReplaceParams struct {

	/*CardData*/
	CardData *models.CardDataPutandPatch
	/*ID*/
	ID string
	/*Namespace
	  User or team name.

	*/
	Namespace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the billing cards replace params
func (o *BillingCardsReplaceParams) WithTimeout(timeout time.Duration) *BillingCardsReplaceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the billing cards replace params
func (o *BillingCardsReplaceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the billing cards replace params
func (o *BillingCardsReplaceParams) WithContext(ctx context.Context) *BillingCardsReplaceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the billing cards replace params
func (o *BillingCardsReplaceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the billing cards replace params
func (o *BillingCardsReplaceParams) WithHTTPClient(client *http.Client) *BillingCardsReplaceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the billing cards replace params
func (o *BillingCardsReplaceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCardData adds the cardData to the billing cards replace params
func (o *BillingCardsReplaceParams) WithCardData(cardData *models.CardDataPutandPatch) *BillingCardsReplaceParams {
	o.SetCardData(cardData)
	return o
}

// SetCardData adds the cardData to the billing cards replace params
func (o *BillingCardsReplaceParams) SetCardData(cardData *models.CardDataPutandPatch) {
	o.CardData = cardData
}

// WithID adds the id to the billing cards replace params
func (o *BillingCardsReplaceParams) WithID(id string) *BillingCardsReplaceParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the billing cards replace params
func (o *BillingCardsReplaceParams) SetID(id string) {
	o.ID = id
}

// WithNamespace adds the namespace to the billing cards replace params
func (o *BillingCardsReplaceParams) WithNamespace(namespace string) *BillingCardsReplaceParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the billing cards replace params
func (o *BillingCardsReplaceParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WriteToRequest writes these params to a swagger request
func (o *BillingCardsReplaceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CardData == nil {
		o.CardData = new(models.CardDataPutandPatch)
	}

	if err := r.SetBodyParam(o.CardData); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

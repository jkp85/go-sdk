package billing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// BillingCustomersCreateReader is a Reader for the BillingCustomersCreate structure.
type BillingCustomersCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BillingCustomersCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewBillingCustomersCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewBillingCustomersCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewBillingCustomersCreateCreated creates a BillingCustomersCreateCreated with default headers values
func NewBillingCustomersCreateCreated() *BillingCustomersCreateCreated {
	return &BillingCustomersCreateCreated{}
}

/*BillingCustomersCreateCreated handles this case with default header values.

Customer created
*/
type BillingCustomersCreateCreated struct {
	Payload *models.Customer
}

func (o *BillingCustomersCreateCreated) Error() string {
	return fmt.Sprintf("[POST /{namespace}/billing/customers/][%d] billingCustomersCreateCreated  %+v", 201, o.Payload)
}

func (o *BillingCustomersCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Customer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBillingCustomersCreateBadRequest creates a BillingCustomersCreateBadRequest with default headers values
func NewBillingCustomersCreateBadRequest() *BillingCustomersCreateBadRequest {
	return &BillingCustomersCreateBadRequest{}
}

/*BillingCustomersCreateBadRequest handles this case with default header values.

Invalid data supplied
*/
type BillingCustomersCreateBadRequest struct {
	Payload BillingCustomersCreateBadRequestBody
}

func (o *BillingCustomersCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /{namespace}/billing/customers/][%d] billingCustomersCreateBadRequest  %+v", 400, o.Payload)
}

func (o *BillingCustomersCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*BillingCustomersCreateBadRequestBody billing customers create bad request body
swagger:model BillingCustomersCreateBadRequestBody
*/
type BillingCustomersCreateBadRequestBody struct {

	// account_balance field errors
	// Required: true
	AccountBalance []string `json:"account_balance"`

	// created field errors
	// Required: true
	Created []string `json:"created"`

	// currency field errors
	// Required: true
	Currency []string `json:"currency"`

	// default_source field errors
	// Required: true
	DefaultSource []string `json:"default_source"`

	// id field errors
	// Required: true
	ID []string `json:"id"`

	// last_invoice_sync field errors
	// Required: true
	LastInvoiceSync []string `json:"last_invoice_sync"`

	// livemode field errors
	// Required: true
	Livemode []string `json:"livemode"`

	// metadata field errors
	// Required: true
	Metadata []string `json:"metadata"`

	// Errors not connected to any field
	// Required: true
	NonFieldErrors []string `json:"non_field_errors"`

	// stripe_id field errors
	// Required: true
	StripeID []string `json:"stripe_id"`

	// user field errors
	// Required: true
	User []string `json:"user"`
}

// Validate validates this billing customers create bad request body
func (o *BillingCustomersCreateBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccountBalance(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateCreated(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateCurrency(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateDefaultSource(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLastInvoiceSync(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLivemode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateNonFieldErrors(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateStripeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateUser(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BillingCustomersCreateBadRequestBody) validateAccountBalance(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersCreateBadRequest"+"."+"account_balance", "body", o.AccountBalance); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersCreateBadRequestBody) validateCreated(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersCreateBadRequest"+"."+"created", "body", o.Created); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersCreateBadRequestBody) validateCurrency(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersCreateBadRequest"+"."+"currency", "body", o.Currency); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersCreateBadRequestBody) validateDefaultSource(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersCreateBadRequest"+"."+"default_source", "body", o.DefaultSource); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersCreateBadRequestBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersCreateBadRequest"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersCreateBadRequestBody) validateLastInvoiceSync(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersCreateBadRequest"+"."+"last_invoice_sync", "body", o.LastInvoiceSync); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersCreateBadRequestBody) validateLivemode(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersCreateBadRequest"+"."+"livemode", "body", o.Livemode); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersCreateBadRequestBody) validateMetadata(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersCreateBadRequest"+"."+"metadata", "body", o.Metadata); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersCreateBadRequestBody) validateNonFieldErrors(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersCreateBadRequest"+"."+"non_field_errors", "body", o.NonFieldErrors); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersCreateBadRequestBody) validateStripeID(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersCreateBadRequest"+"."+"stripe_id", "body", o.StripeID); err != nil {
		return err
	}

	return nil
}

func (o *BillingCustomersCreateBadRequestBody) validateUser(formats strfmt.Registry) error {

	if err := validate.Required("billingCustomersCreateBadRequest"+"."+"user", "body", o.User); err != nil {
		return err
	}

	return nil
}

/*BillingCustomersCreateBody billing customers create body
swagger:model BillingCustomersCreateBody
*/
type BillingCustomersCreateBody struct {

	// account balance
	AccountBalance int64 `json:"account_balance,omitempty"`

	// currency
	Currency string `json:"currency,omitempty"`

	// default source
	DefaultSource string `json:"default_source,omitempty"`

	// last invoice sync
	LastInvoiceSync string `json:"last_invoice_sync,omitempty"`

	// metadata
	Metadata interface{} `json:"metadata,omitempty"`

	// user
	// Required: true
	User *string `json:"user"`
}

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IllumiDesk/go-sdk/models"
)

// NotificationsUpdateEntityListReader is a Reader for the NotificationsUpdateEntityList structure.
type NotificationsUpdateEntityListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotificationsUpdateEntityListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNotificationsUpdateEntityListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewNotificationsUpdateEntityListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNotificationsUpdateEntityListOK creates a NotificationsUpdateEntityListOK with default headers values
func NewNotificationsUpdateEntityListOK() *NotificationsUpdateEntityListOK {
	return &NotificationsUpdateEntityListOK{}
}

/*NotificationsUpdateEntityListOK handles this case with default header values.

Notification updated
*/
type NotificationsUpdateEntityListOK struct {
	Payload *models.Notification
}

func (o *NotificationsUpdateEntityListOK) GetPayload() interface{} {
	return o.Payload
}

func (o *NotificationsUpdateEntityListOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/{namespace}/notifications/entity/{entity}][%d] notificationsUpdateEntityListOK  %+v", 200, o.Payload)
}

func (o *NotificationsUpdateEntityListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Notification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsUpdateEntityListBadRequest creates a NotificationsUpdateEntityListBadRequest with default headers values
func NewNotificationsUpdateEntityListBadRequest() *NotificationsUpdateEntityListBadRequest {
	return &NotificationsUpdateEntityListBadRequest{}
}

/*NotificationsUpdateEntityListBadRequest handles this case with default header values.

Invalid data supplied
*/
type NotificationsUpdateEntityListBadRequest struct {
	Payload *models.NotificationError
}

func (o *NotificationsUpdateEntityListBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *NotificationsUpdateEntityListBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/{namespace}/notifications/entity/{entity}][%d] notificationsUpdateEntityListBadRequest  %+v", 400, o.Payload)
}

func (o *NotificationsUpdateEntityListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotificationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

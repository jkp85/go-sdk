// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IllumiDesk/go-sdk/models"
)

// NewNotificationSettingsUpdateParams creates a new NotificationSettingsUpdateParams object
// with the default values initialized.
func NewNotificationSettingsUpdateParams() *NotificationSettingsUpdateParams {
	var ()
	return &NotificationSettingsUpdateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewNotificationSettingsUpdateParamsWithTimeout creates a new NotificationSettingsUpdateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewNotificationSettingsUpdateParamsWithTimeout(timeout time.Duration) *NotificationSettingsUpdateParams {
	var ()
	return &NotificationSettingsUpdateParams{

		timeout: timeout,
	}
}

// NewNotificationSettingsUpdateParamsWithContext creates a new NotificationSettingsUpdateParams object
// with the default values initialized, and the ability to set a context for a request
func NewNotificationSettingsUpdateParamsWithContext(ctx context.Context) *NotificationSettingsUpdateParams {
	var ()
	return &NotificationSettingsUpdateParams{

		Context: ctx,
	}
}

// NewNotificationSettingsUpdateParamsWithHTTPClient creates a new NotificationSettingsUpdateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewNotificationSettingsUpdateParamsWithHTTPClient(client *http.Client) *NotificationSettingsUpdateParams {
	var ()
	return &NotificationSettingsUpdateParams{
		HTTPClient: client,
	}
}

/*NotificationSettingsUpdateParams contains all the parameters to send to the API endpoint
for the notification settings update operation typically these are written to a http.Request
*/
type NotificationSettingsUpdateParams struct {

	/*Namespace
	  User or team name.

	*/
	Namespace string
	/*NotificationSettingsData*/
	NotificationSettingsData *models.NotificationSettingsData

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the notification settings update params
func (o *NotificationSettingsUpdateParams) WithTimeout(timeout time.Duration) *NotificationSettingsUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the notification settings update params
func (o *NotificationSettingsUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the notification settings update params
func (o *NotificationSettingsUpdateParams) WithContext(ctx context.Context) *NotificationSettingsUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the notification settings update params
func (o *NotificationSettingsUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the notification settings update params
func (o *NotificationSettingsUpdateParams) WithHTTPClient(client *http.Client) *NotificationSettingsUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the notification settings update params
func (o *NotificationSettingsUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNamespace adds the namespace to the notification settings update params
func (o *NotificationSettingsUpdateParams) WithNamespace(namespace string) *NotificationSettingsUpdateParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the notification settings update params
func (o *NotificationSettingsUpdateParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithNotificationSettingsData adds the notificationSettingsData to the notification settings update params
func (o *NotificationSettingsUpdateParams) WithNotificationSettingsData(notificationSettingsData *models.NotificationSettingsData) *NotificationSettingsUpdateParams {
	o.SetNotificationSettingsData(notificationSettingsData)
	return o
}

// SetNotificationSettingsData adds the notificationSettingsData to the notification settings update params
func (o *NotificationSettingsUpdateParams) SetNotificationSettingsData(notificationSettingsData *models.NotificationSettingsData) {
	o.NotificationSettingsData = notificationSettingsData
}

// WriteToRequest writes these params to a swagger request
func (o *NotificationSettingsUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	if o.NotificationSettingsData != nil {
		if err := r.SetBodyParam(o.NotificationSettingsData); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

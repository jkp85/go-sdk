package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IllumiDesk/go-sdk/models"
)

// NotificationsUpdateListReader is a Reader for the NotificationsUpdateList structure.
type NotificationsUpdateListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotificationsUpdateListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNotificationsUpdateListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewNotificationsUpdateListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNotificationsUpdateListOK creates a NotificationsUpdateListOK with default headers values
func NewNotificationsUpdateListOK() *NotificationsUpdateListOK {
	return &NotificationsUpdateListOK{}
}

/*NotificationsUpdateListOK handles this case with default header values.

Notification updated
*/
type NotificationsUpdateListOK struct {
	Payload *models.Notification
}

func (o *NotificationsUpdateListOK) GetPayload() interface{} {
	return o.Payload
}

func (o *NotificationsUpdateListOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/{namespace}/notifications/][%d] notificationsUpdateListOK  %+v", 200, o.Payload)
}

func (o *NotificationsUpdateListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Notification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsUpdateListBadRequest creates a NotificationsUpdateListBadRequest with default headers values
func NewNotificationsUpdateListBadRequest() *NotificationsUpdateListBadRequest {
	return &NotificationsUpdateListBadRequest{}
}

/*NotificationsUpdateListBadRequest handles this case with default header values.

Invalid data supplied
*/
type NotificationsUpdateListBadRequest struct {
	Payload *models.NotificationError
}

func (o *NotificationsUpdateListBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *NotificationsUpdateListBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/{namespace}/notifications/][%d] notificationsUpdateListBadRequest  %+v", 400, o.Payload)
}

func (o *NotificationsUpdateListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotificationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// ServiceTriggerReadReader is a Reader for the ServiceTriggerRead structure.
type ServiceTriggerReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceTriggerReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewServiceTriggerReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewServiceTriggerReadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewServiceTriggerReadOK creates a ServiceTriggerReadOK with default headers values
func NewServiceTriggerReadOK() *ServiceTriggerReadOK {
	return &ServiceTriggerReadOK{}
}

/*ServiceTriggerReadOK handles this case with default header values.

Server action retrieved.
*/
type ServiceTriggerReadOK struct {
	Payload *models.ServerAction
}

func (o *ServiceTriggerReadOK) Error() string {
	return fmt.Sprintf("[GET /v1/{namespace}/projects/{project_id}/servers/{server_id}/triggers/{id}/][%d] serviceTriggerReadOK  %+v", 200, o.Payload)
}

func (o *ServiceTriggerReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerAction)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceTriggerReadNotFound creates a ServiceTriggerReadNotFound with default headers values
func NewServiceTriggerReadNotFound() *ServiceTriggerReadNotFound {
	return &ServiceTriggerReadNotFound{}
}

/*ServiceTriggerReadNotFound handles this case with default header values.

ServerAction not found.
*/
type ServiceTriggerReadNotFound struct {
	Payload *models.NotFound
}

func (o *ServiceTriggerReadNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/{namespace}/projects/{project_id}/servers/{server_id}/triggers/{id}/][%d] serviceTriggerReadNotFound  %+v", 404, o.Payload)
}

func (o *ServiceTriggerReadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkp85/go-sdk/models"
)

// ProjectsServersPartialUpdateReader is a Reader for the ProjectsServersPartialUpdate structure.
type ProjectsServersPartialUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsServersPartialUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProjectsServersPartialUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewProjectsServersPartialUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewProjectsServersPartialUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectsServersPartialUpdateOK creates a ProjectsServersPartialUpdateOK with default headers values
func NewProjectsServersPartialUpdateOK() *ProjectsServersPartialUpdateOK {
	return &ProjectsServersPartialUpdateOK{}
}

/*ProjectsServersPartialUpdateOK handles this case with default header values.

Server updated
*/
type ProjectsServersPartialUpdateOK struct {
	Payload *models.Server
}

func (o *ProjectsServersPartialUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v0/{namespace}/projects/{project_pk}/servers/{id}/][%d] projectsServersPartialUpdateOK  %+v", 200, o.Payload)
}

func (o *ProjectsServersPartialUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Server)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsServersPartialUpdateBadRequest creates a ProjectsServersPartialUpdateBadRequest with default headers values
func NewProjectsServersPartialUpdateBadRequest() *ProjectsServersPartialUpdateBadRequest {
	return &ProjectsServersPartialUpdateBadRequest{}
}

/*ProjectsServersPartialUpdateBadRequest handles this case with default header values.

Invalid data supplied
*/
type ProjectsServersPartialUpdateBadRequest struct {
}

func (o *ProjectsServersPartialUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v0/{namespace}/projects/{project_pk}/servers/{id}/][%d] projectsServersPartialUpdateBadRequest ", 400)
}

func (o *ProjectsServersPartialUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProjectsServersPartialUpdateNotFound creates a ProjectsServersPartialUpdateNotFound with default headers values
func NewProjectsServersPartialUpdateNotFound() *ProjectsServersPartialUpdateNotFound {
	return &ProjectsServersPartialUpdateNotFound{}
}

/*ProjectsServersPartialUpdateNotFound handles this case with default header values.

Server not found
*/
type ProjectsServersPartialUpdateNotFound struct {
}

func (o *ProjectsServersPartialUpdateNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v0/{namespace}/projects/{project_pk}/servers/{id}/][%d] projectsServersPartialUpdateNotFound ", 404)
}

func (o *ProjectsServersPartialUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*ProjectsServersPartialUpdateBody projects servers partial update body
swagger:model ProjectsServersPartialUpdateBody
*/
type ProjectsServersPartialUpdateBody struct {

	// config
	Config interface{} `json:"config,omitempty"`

	// environment resources
	EnvironmentResources string `json:"environment_resources,omitempty"`

	// environment type
	EnvironmentType string `json:"environment_type,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// startup script
	StartupScript string `json:"startup_script,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

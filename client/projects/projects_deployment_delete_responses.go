package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IllumiDesk/go-sdk/models"
)

// ProjectsDeploymentDeleteReader is a Reader for the ProjectsDeploymentDelete structure.
type ProjectsDeploymentDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsDeploymentDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewProjectsDeploymentDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewProjectsDeploymentDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectsDeploymentDeleteNoContent creates a ProjectsDeploymentDeleteNoContent with default headers values
func NewProjectsDeploymentDeleteNoContent() *ProjectsDeploymentDeleteNoContent {
	return &ProjectsDeploymentDeleteNoContent{}
}

/*ProjectsDeploymentDeleteNoContent handles this case with default header values.

Deployment deleted
*/
type ProjectsDeploymentDeleteNoContent struct {
}

func (o *ProjectsDeploymentDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/{namespace}/projects/{project}/deployments/{deployment}/][%d] projectsDeploymentDeleteNoContent ", 204)
}

func (o *ProjectsDeploymentDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProjectsDeploymentDeleteNotFound creates a ProjectsDeploymentDeleteNotFound with default headers values
func NewProjectsDeploymentDeleteNotFound() *ProjectsDeploymentDeleteNotFound {
	return &ProjectsDeploymentDeleteNotFound{}
}

/*ProjectsDeploymentDeleteNotFound handles this case with default header values.

Deployment not found
*/
type ProjectsDeploymentDeleteNotFound struct {
	Payload *models.NotFound
}

func (o *ProjectsDeploymentDeleteNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsDeploymentDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/{namespace}/projects/{project}/deployments/{deployment}/][%d] projectsDeploymentDeleteNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsDeploymentDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewProjectsProjectFilesCreateParams creates a new ProjectsProjectFilesCreateParams object
// with the default values initialized.
func NewProjectsProjectFilesCreateParams() *ProjectsProjectFilesCreateParams {
	var ()
	return &ProjectsProjectFilesCreateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewProjectsProjectFilesCreateParamsWithTimeout creates a new ProjectsProjectFilesCreateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewProjectsProjectFilesCreateParamsWithTimeout(timeout time.Duration) *ProjectsProjectFilesCreateParams {
	var ()
	return &ProjectsProjectFilesCreateParams{

		timeout: timeout,
	}
}

// NewProjectsProjectFilesCreateParamsWithContext creates a new ProjectsProjectFilesCreateParams object
// with the default values initialized, and the ability to set a context for a request
func NewProjectsProjectFilesCreateParamsWithContext(ctx context.Context) *ProjectsProjectFilesCreateParams {
	var ()
	return &ProjectsProjectFilesCreateParams{

		Context: ctx,
	}
}

// NewProjectsProjectFilesCreateParamsWithHTTPClient creates a new ProjectsProjectFilesCreateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewProjectsProjectFilesCreateParamsWithHTTPClient(client *http.Client) *ProjectsProjectFilesCreateParams {
	var ()
	return &ProjectsProjectFilesCreateParams{
		HTTPClient: client,
	}
}

/*ProjectsProjectFilesCreateParams contains all the parameters to send to the API endpoint
for the projects project files create operation typically these are written to a http.Request
*/
type ProjectsProjectFilesCreateParams struct {

	/*File*/
	Data ProjectsProjectFilesCreateBody
	/*Namespace*/
	Namespace string
	/*ProjectPk*/
	ProjectPk string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithTimeout(timeout time.Duration) *ProjectsProjectFilesCreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithContext(ctx context.Context) *ProjectsProjectFilesCreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithHTTPClient(client *http.Client) *ProjectsProjectFilesCreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

func (o *ProjectsProjectFilesCreateParams) WithData(data ProjectsProjectFilesCreateBody) *ProjectsProjectFilesCreateParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the projects files create params
func (o *ProjectsProjectFilesCreateParams) SetData(data ProjectsProjectFilesCreateBody) {
	o.Data = data
}

// WithNamespace adds the namespace to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithNamespace(namespace string) *ProjectsProjectFilesCreateParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithProjectPk adds the projectPk to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithProjectPk(projectPk string) *ProjectsProjectFilesCreateParams {
	o.SetProjectPk(projectPk)
	return o
}

// SetProjectPk adds the projectPk to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetProjectPk(projectPk string) {
	o.ProjectPk = projectPk
}

// WriteToRequest writes these params to a swagger request
func (o *ProjectsProjectFilesCreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form file param file
	if err := r.SetFileParam("file", o.Data.File); err != nil {
		return err
	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	// form param project
	frProject := *o.Data.Project
	fProject := frProject
	if fProject != "" {
		if err := r.SetFormParam("project", fProject); err != nil {
			return err
		}
	}

	// path param project_pk
	if err := r.SetPathParam("project_pk", o.ProjectPk); err != nil {
		return err
	}

	if &o.Data.Public != nil {

		// form param public
		var frPublic bool
		if &o.Data.Public != nil {
			frPublic = o.Data.Public
		}
		fPublic := swag.FormatBool(frPublic)
		if fPublic != "" {
			if err := r.SetFormParam("public", fPublic); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

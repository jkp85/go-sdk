// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"os"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewProjectsProjectFilesCreateParams creates a new ProjectsProjectFilesCreateParams object
// with the default values initialized.
func NewProjectsProjectFilesCreateParams() *ProjectsProjectFilesCreateParams {
	var ()
	return &ProjectsProjectFilesCreateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewProjectsProjectFilesCreateParamsWithTimeout creates a new ProjectsProjectFilesCreateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewProjectsProjectFilesCreateParamsWithTimeout(timeout time.Duration) *ProjectsProjectFilesCreateParams {
	var ()
	return &ProjectsProjectFilesCreateParams{

		timeout: timeout,
	}
}

// NewProjectsProjectFilesCreateParamsWithContext creates a new ProjectsProjectFilesCreateParams object
// with the default values initialized, and the ability to set a context for a request
func NewProjectsProjectFilesCreateParamsWithContext(ctx context.Context) *ProjectsProjectFilesCreateParams {
	var ()
	return &ProjectsProjectFilesCreateParams{

		Context: ctx,
	}
}

// NewProjectsProjectFilesCreateParamsWithHTTPClient creates a new ProjectsProjectFilesCreateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewProjectsProjectFilesCreateParamsWithHTTPClient(client *http.Client) *ProjectsProjectFilesCreateParams {
	var ()
	return &ProjectsProjectFilesCreateParams{
		HTTPClient: client,
	}
}

/*ProjectsProjectFilesCreateParams contains all the parameters to send to the API endpoint
for the projects project files create operation typically these are written to a http.Request
*/
type ProjectsProjectFilesCreateParams struct {

	/*Base64Data
	  Fila data, represented as base64.

	*/
	Base64Data *string
	/*File
	  File to send, to create new file. This parameter is only used with form data and may include multiple files.

	*/
	File *os.File
	/*Name
	  File name. May include path when creating file with base64 field.

	*/
	Name *string
	/*Namespace
	  User or team name.

	*/
	Namespace string
	/*Path
	  File path. Defaults to (/).

	*/
	Path *string
	/*Project
	  Project unique identifier.

	*/
	Project string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithTimeout(timeout time.Duration) *ProjectsProjectFilesCreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithContext(ctx context.Context) *ProjectsProjectFilesCreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithHTTPClient(client *http.Client) *ProjectsProjectFilesCreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBase64Data adds the base64Data to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithBase64Data(base64Data *string) *ProjectsProjectFilesCreateParams {
	o.SetBase64Data(base64Data)
	return o
}

// SetBase64Data adds the base64Data to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetBase64Data(base64Data *string) {
	o.Base64Data = base64Data
}

// WithFile adds the file to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithFile(file *os.File) *ProjectsProjectFilesCreateParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetFile(file *os.File) {
	o.File = file
}

// WithName adds the name to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithName(name *string) *ProjectsProjectFilesCreateParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetName(name *string) {
	o.Name = name
}

// WithNamespace adds the namespace to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithNamespace(namespace string) *ProjectsProjectFilesCreateParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithPath adds the path to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithPath(path *string) *ProjectsProjectFilesCreateParams {
	o.SetPath(path)
	return o
}

// SetPath adds the path to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetPath(path *string) {
	o.Path = path
}

// WithProject adds the project to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) WithProject(project string) *ProjectsProjectFilesCreateParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the projects project files create params
func (o *ProjectsProjectFilesCreateParams) SetProject(project string) {
	o.Project = project
}

// WriteToRequest writes these params to a swagger request
func (o *ProjectsProjectFilesCreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Base64Data != nil {

		// form param base64_data
		var frBase64Data string
		if o.Base64Data != nil {
			frBase64Data = *o.Base64Data
		}
		fBase64Data := frBase64Data
		if fBase64Data != "" {
			if err := r.SetFormParam("base64_data", fBase64Data); err != nil {
				return err
			}
		}

	}

	if o.File != nil {

		if o.File != nil {

			// form file param file
			if err := r.SetFileParam("file", o.File); err != nil {
				return err
			}

		}

	}

	if o.Name != nil {

		// form param name
		var frName string
		if o.Name != nil {
			frName = *o.Name
		}
		fName := frName
		if fName != "" {
			if err := r.SetFormParam("name", fName); err != nil {
				return err
			}
		}

	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	if o.Path != nil {

		// form param path
		var frPath string
		if o.Path != nil {
			frPath = *o.Path
		}
		fPath := frPath
		if fPath != "" {
			if err := r.SetFormParam("path", fPath); err != nil {
				return err
			}
		}

	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

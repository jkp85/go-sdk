package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// ProjectsStatsPartialUpdateReader is a Reader for the ProjectsStatsPartialUpdate structure.
type ProjectsStatsPartialUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsStatsPartialUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProjectsStatsPartialUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewProjectsStatsPartialUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewProjectsStatsPartialUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectsStatsPartialUpdateOK creates a ProjectsStatsPartialUpdateOK with default headers values
func NewProjectsStatsPartialUpdateOK() *ProjectsStatsPartialUpdateOK {
	return &ProjectsStatsPartialUpdateOK{}
}

/*ProjectsStatsPartialUpdateOK handles this case with default header values.

ServerStatistics updated
*/
type ProjectsStatsPartialUpdateOK struct {
	Payload *models.ServerStatistics
}

func (o *ProjectsStatsPartialUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v0/{namespace}/projects/{project_pk}/{server_type}/{server_pk}/stats/{id}/][%d] projectsStatsPartialUpdateOK  %+v", 200, o.Payload)
}

func (o *ProjectsStatsPartialUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerStatistics)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsStatsPartialUpdateBadRequest creates a ProjectsStatsPartialUpdateBadRequest with default headers values
func NewProjectsStatsPartialUpdateBadRequest() *ProjectsStatsPartialUpdateBadRequest {
	return &ProjectsStatsPartialUpdateBadRequest{}
}

/*ProjectsStatsPartialUpdateBadRequest handles this case with default header values.

Invalid data supplied
*/
type ProjectsStatsPartialUpdateBadRequest struct {
}

func (o *ProjectsStatsPartialUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v0/{namespace}/projects/{project_pk}/{server_type}/{server_pk}/stats/{id}/][%d] projectsStatsPartialUpdateBadRequest ", 400)
}

func (o *ProjectsStatsPartialUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProjectsStatsPartialUpdateNotFound creates a ProjectsStatsPartialUpdateNotFound with default headers values
func NewProjectsStatsPartialUpdateNotFound() *ProjectsStatsPartialUpdateNotFound {
	return &ProjectsStatsPartialUpdateNotFound{}
}

/*ProjectsStatsPartialUpdateNotFound handles this case with default header values.

ServerStatistics not found
*/
type ProjectsStatsPartialUpdateNotFound struct {
}

func (o *ProjectsStatsPartialUpdateNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v0/{namespace}/projects/{project_pk}/{server_type}/{server_pk}/stats/{id}/][%d] projectsStatsPartialUpdateNotFound ", 404)
}

func (o *ProjectsStatsPartialUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*ProjectsStatsPartialUpdateBody projects stats partial update body
swagger:model ProjectsStatsPartialUpdateBody
*/
type ProjectsStatsPartialUpdateBody struct {

	// size
	Size int64 `json:"size,omitempty"`

	// start
	Start string `json:"start,omitempty"`

	// stop
	Stop string `json:"stop,omitempty"`
}

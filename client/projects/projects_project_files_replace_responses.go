// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// ProjectsProjectFilesReplaceReader is a Reader for the ProjectsProjectFilesReplace structure.
type ProjectsProjectFilesReplaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsProjectFilesReplaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProjectsProjectFilesReplaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewProjectsProjectFilesReplaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectsProjectFilesReplaceOK creates a ProjectsProjectFilesReplaceOK with default headers values
func NewProjectsProjectFilesReplaceOK() *ProjectsProjectFilesReplaceOK {
	return &ProjectsProjectFilesReplaceOK{}
}

/*ProjectsProjectFilesReplaceOK handles this case with default header values.

ProjectFile updated
*/
type ProjectsProjectFilesReplaceOK struct {
	Payload *models.ProjectFile
}

func (o *ProjectsProjectFilesReplaceOK) Error() string {
	return fmt.Sprintf("[PUT /v1/{namespace}/projects/{project}/project_files/{id}/][%d] projectsProjectFilesReplaceOK  %+v", 200, o.Payload)
}

func (o *ProjectsProjectFilesReplaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsProjectFilesReplaceBadRequest creates a ProjectsProjectFilesReplaceBadRequest with default headers values
func NewProjectsProjectFilesReplaceBadRequest() *ProjectsProjectFilesReplaceBadRequest {
	return &ProjectsProjectFilesReplaceBadRequest{}
}

/*ProjectsProjectFilesReplaceBadRequest handles this case with default header values.

Invalid data supplied.
*/
type ProjectsProjectFilesReplaceBadRequest struct {
	Payload *models.ProjectFileError
}

func (o *ProjectsProjectFilesReplaceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/{namespace}/projects/{project}/project_files/{id}/][%d] projectsProjectFilesReplaceBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectsProjectFilesReplaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectFileError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

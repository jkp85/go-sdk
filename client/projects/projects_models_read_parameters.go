package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewProjectsModelsReadParams creates a new ProjectsModelsReadParams object
// with the default values initialized.
func NewProjectsModelsReadParams() *ProjectsModelsReadParams {
	var ()
	return &ProjectsModelsReadParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewProjectsModelsReadParamsWithTimeout creates a new ProjectsModelsReadParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewProjectsModelsReadParamsWithTimeout(timeout time.Duration) *ProjectsModelsReadParams {
	var ()
	return &ProjectsModelsReadParams{

		timeout: timeout,
	}
}

// NewProjectsModelsReadParamsWithContext creates a new ProjectsModelsReadParams object
// with the default values initialized, and the ability to set a context for a request
func NewProjectsModelsReadParamsWithContext(ctx context.Context) *ProjectsModelsReadParams {
	var ()
	return &ProjectsModelsReadParams{

		Context: ctx,
	}
}

// NewProjectsModelsReadParamsWithHTTPClient creates a new ProjectsModelsReadParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewProjectsModelsReadParamsWithHTTPClient(client *http.Client) *ProjectsModelsReadParams {
	var ()
	return &ProjectsModelsReadParams{
		HTTPClient: client,
	}
}

/*ProjectsModelsReadParams contains all the parameters to send to the API endpoint
for the projects models read operation typically these are written to a http.Request
*/
type ProjectsModelsReadParams struct {

	/*Namespace*/
	Namespace string
	/*ProjectPk*/
	ProjectPk string
	/*Server*/
	Server string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the projects models read params
func (o *ProjectsModelsReadParams) WithTimeout(timeout time.Duration) *ProjectsModelsReadParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the projects models read params
func (o *ProjectsModelsReadParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the projects models read params
func (o *ProjectsModelsReadParams) WithContext(ctx context.Context) *ProjectsModelsReadParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the projects models read params
func (o *ProjectsModelsReadParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the projects models read params
func (o *ProjectsModelsReadParams) WithHTTPClient(client *http.Client) *ProjectsModelsReadParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the projects models read params
func (o *ProjectsModelsReadParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNamespace adds the namespace to the projects models read params
func (o *ProjectsModelsReadParams) WithNamespace(namespace string) *ProjectsModelsReadParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the projects models read params
func (o *ProjectsModelsReadParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithProjectPk adds the projectPk to the projects models read params
func (o *ProjectsModelsReadParams) WithProjectPk(projectPk string) *ProjectsModelsReadParams {
	o.SetProjectPk(projectPk)
	return o
}

// SetProjectPk adds the projectPk to the projects models read params
func (o *ProjectsModelsReadParams) SetProjectPk(projectPk string) {
	o.ProjectPk = projectPk
}

// WithServer adds the server to the projects models read params
func (o *ProjectsModelsReadParams) WithServer(server string) *ProjectsModelsReadParams {
	o.SetServer(server)
	return o
}

// SetServer adds the server to the projects models read params
func (o *ProjectsModelsReadParams) SetServer(server string) {
	o.Server = server
}

// WriteToRequest writes these params to a swagger request
func (o *ProjectsModelsReadParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	// path param project_pk
	if err := r.SetPathParam("project_pk", o.ProjectPk); err != nil {
		return err
	}

	// path param server
	if err := r.SetPathParam("server", o.Server); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

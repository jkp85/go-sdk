// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3Blades/go-sdk/models"
)

// ProjectsServersReadReader is a Reader for the ProjectsServersRead structure.
type ProjectsServersReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsServersReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProjectsServersReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewProjectsServersReadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectsServersReadOK creates a ProjectsServersReadOK with default headers values
func NewProjectsServersReadOK() *ProjectsServersReadOK {
	return &ProjectsServersReadOK{}
}

/*ProjectsServersReadOK handles this case with default header values.

Server retrieved.
*/
type ProjectsServersReadOK struct {
	Payload *models.Server
}

func (o *ProjectsServersReadOK) Error() string {
	return fmt.Sprintf("[GET /v1/{namespace}/projects/{project_id}/servers/{id}/][%d] projectsServersReadOK  %+v", 200, o.Payload)
}

func (o *ProjectsServersReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Server)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsServersReadNotFound creates a ProjectsServersReadNotFound with default headers values
func NewProjectsServersReadNotFound() *ProjectsServersReadNotFound {
	return &ProjectsServersReadNotFound{}
}

/*ProjectsServersReadNotFound handles this case with default header values.

Server not found.
*/
type ProjectsServersReadNotFound struct {
	Payload *models.NotFound
}

func (o *ProjectsServersReadNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/{namespace}/projects/{project_id}/servers/{id}/][%d] projectsServersReadNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsServersReadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

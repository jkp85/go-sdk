package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IllumiDesk/go-sdk/models"
)

// ProjectsCollaboratorsReadReader is a Reader for the ProjectsCollaboratorsRead structure.
type ProjectsCollaboratorsReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsCollaboratorsReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProjectsCollaboratorsReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewProjectsCollaboratorsReadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectsCollaboratorsReadOK creates a ProjectsCollaboratorsReadOK with default headers values
func NewProjectsCollaboratorsReadOK() *ProjectsCollaboratorsReadOK {
	return &ProjectsCollaboratorsReadOK{}
}

/*ProjectsCollaboratorsReadOK handles this case with default header values.

Collaborator retrieved.
*/
type ProjectsCollaboratorsReadOK struct {
	Payload *models.Collaborator
}

func (o *ProjectsCollaboratorsReadOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsCollaboratorsReadOK) Error() string {
	return fmt.Sprintf("[GET /v1/{namespace}/projects/{project}/collaborators/{collaborator}/][%d] projectsCollaboratorsReadOK  %+v", 200, o.Payload)
}

func (o *ProjectsCollaboratorsReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Collaborator)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsCollaboratorsReadNotFound creates a ProjectsCollaboratorsReadNotFound with default headers values
func NewProjectsCollaboratorsReadNotFound() *ProjectsCollaboratorsReadNotFound {
	return &ProjectsCollaboratorsReadNotFound{}
}

/*ProjectsCollaboratorsReadNotFound handles this case with default header values.

Collaborator not found.
*/
type ProjectsCollaboratorsReadNotFound struct {
	Payload *models.NotFound
}

func (o *ProjectsCollaboratorsReadNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsCollaboratorsReadNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/{namespace}/projects/{project}/collaborators/{collaborator}/][%d] projectsCollaboratorsReadNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsCollaboratorsReadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

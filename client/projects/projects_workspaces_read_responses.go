package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkp85/go-sdk/models"
)

// ProjectsWorkspacesReadReader is a Reader for the ProjectsWorkspacesRead structure.
type ProjectsWorkspacesReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsWorkspacesReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProjectsWorkspacesReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewProjectsWorkspacesReadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectsWorkspacesReadOK creates a ProjectsWorkspacesReadOK with default headers values
func NewProjectsWorkspacesReadOK() *ProjectsWorkspacesReadOK {
	return &ProjectsWorkspacesReadOK{}
}

/*ProjectsWorkspacesReadOK handles this case with default header values.

Workspace retrieved
*/
type ProjectsWorkspacesReadOK struct {
	Payload *models.Workspace
}

func (o *ProjectsWorkspacesReadOK) Error() string {
	return fmt.Sprintf("[GET /api/v0/{namespace}/projects/{project_pk}/workspaces/{server}/][%d] projectsWorkspacesReadOK  %+v", 200, o.Payload)
}

func (o *ProjectsWorkspacesReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Workspace)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsWorkspacesReadNotFound creates a ProjectsWorkspacesReadNotFound with default headers values
func NewProjectsWorkspacesReadNotFound() *ProjectsWorkspacesReadNotFound {
	return &ProjectsWorkspacesReadNotFound{}
}

/*ProjectsWorkspacesReadNotFound handles this case with default header values.

Workspace not found
*/
type ProjectsWorkspacesReadNotFound struct {
}

func (o *ProjectsWorkspacesReadNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v0/{namespace}/projects/{project_pk}/workspaces/{server}/][%d] projectsWorkspacesReadNotFound ", 404)
}

func (o *ProjectsWorkspacesReadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

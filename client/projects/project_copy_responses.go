package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IllumiDesk/go-sdk/models"
)

// ProjectCopyReader is a Reader for the ProjectCopy structure.
type ProjectCopyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectCopyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewProjectCopyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewProjectCopyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewProjectCopyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectCopyCreated creates a ProjectCopyCreated with default headers values
func NewProjectCopyCreated() *ProjectCopyCreated {
	return &ProjectCopyCreated{}
}

/*ProjectCopyCreated handles this case with default header values.

Project copied
*/
type ProjectCopyCreated struct {
	Payload *models.Project
}

func (o *ProjectCopyCreated) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectCopyCreated) Error() string {
	return fmt.Sprintf("[POST /v1/{namespace}/projects/project-copy/][%d] projectCopyCreated  %+v", 201, o.Payload)
}

func (o *ProjectCopyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Project)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectCopyBadRequest creates a ProjectCopyBadRequest with default headers values
func NewProjectCopyBadRequest() *ProjectCopyBadRequest {
	return &ProjectCopyBadRequest{}
}

/*ProjectCopyBadRequest handles this case with default header values.

Invalid data supplied
*/
type ProjectCopyBadRequest struct {
	Payload *models.ProjectError
}

func (o *ProjectCopyBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectCopyBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/{namespace}/projects/project-copy/][%d] projectCopyBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectCopyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectCopyNotFound creates a ProjectCopyNotFound with default headers values
func NewProjectCopyNotFound() *ProjectCopyNotFound {
	return &ProjectCopyNotFound{}
}

/*ProjectCopyNotFound handles this case with default header values.

Project not found.
*/
type ProjectCopyNotFound struct {
	Payload *models.NotFound
}

func (o *ProjectCopyNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectCopyNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/{namespace}/projects/project-copy/][%d] projectCopyNotFound  %+v", 404, o.Payload)
}

func (o *ProjectCopyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

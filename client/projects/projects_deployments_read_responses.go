package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IllumiDesk/go-sdk/models"
)

// ProjectsDeploymentsReadReader is a Reader for the ProjectsDeploymentsRead structure.
type ProjectsDeploymentsReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsDeploymentsReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProjectsDeploymentsReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewProjectsDeploymentsReadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectsDeploymentsReadOK creates a ProjectsDeploymentsReadOK with default headers values
func NewProjectsDeploymentsReadOK() *ProjectsDeploymentsReadOK {
	return &ProjectsDeploymentsReadOK{}
}

/*ProjectsDeploymentsReadOK handles this case with default header values.

Deployment retrieved.
*/
type ProjectsDeploymentsReadOK struct {
	Payload *models.Deployment
}

func (o *ProjectsDeploymentsReadOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsDeploymentsReadOK) Error() string {
	return fmt.Sprintf("[GET /v1/{namespace}/projects/{project}/deployments/{deployment}/][%d] projectsDeploymentsReadOK  %+v", 200, o.Payload)
}

func (o *ProjectsDeploymentsReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Deployment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsDeploymentsReadNotFound creates a ProjectsDeploymentsReadNotFound with default headers values
func NewProjectsDeploymentsReadNotFound() *ProjectsDeploymentsReadNotFound {
	return &ProjectsDeploymentsReadNotFound{}
}

/*ProjectsDeploymentsReadNotFound handles this case with default header values.

Deployment not found.
*/
type ProjectsDeploymentsReadNotFound struct {
	Payload *models.NotFound
}

func (o *ProjectsDeploymentsReadNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsDeploymentsReadNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/{namespace}/projects/{project}/deployments/{deployment}/][%d] projectsDeploymentsReadNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsDeploymentsReadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

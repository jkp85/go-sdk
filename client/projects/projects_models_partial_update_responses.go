package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkp85/go-sdk/models"
)

// ProjectsModelsPartialUpdateReader is a Reader for the ProjectsModelsPartialUpdate structure.
type ProjectsModelsPartialUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsModelsPartialUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProjectsModelsPartialUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewProjectsModelsPartialUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewProjectsModelsPartialUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectsModelsPartialUpdateOK creates a ProjectsModelsPartialUpdateOK with default headers values
func NewProjectsModelsPartialUpdateOK() *ProjectsModelsPartialUpdateOK {
	return &ProjectsModelsPartialUpdateOK{}
}

/*ProjectsModelsPartialUpdateOK handles this case with default header values.

Model updated
*/
type ProjectsModelsPartialUpdateOK struct {
	Payload *models.Model
}

func (o *ProjectsModelsPartialUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v0/{namespace}/projects/{project_pk}/models/{server}/][%d] projectsModelsPartialUpdateOK  %+v", 200, o.Payload)
}

func (o *ProjectsModelsPartialUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Model)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsModelsPartialUpdateBadRequest creates a ProjectsModelsPartialUpdateBadRequest with default headers values
func NewProjectsModelsPartialUpdateBadRequest() *ProjectsModelsPartialUpdateBadRequest {
	return &ProjectsModelsPartialUpdateBadRequest{}
}

/*ProjectsModelsPartialUpdateBadRequest handles this case with default header values.

Invalid data supplied
*/
type ProjectsModelsPartialUpdateBadRequest struct {
}

func (o *ProjectsModelsPartialUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v0/{namespace}/projects/{project_pk}/models/{server}/][%d] projectsModelsPartialUpdateBadRequest ", 400)
}

func (o *ProjectsModelsPartialUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProjectsModelsPartialUpdateNotFound creates a ProjectsModelsPartialUpdateNotFound with default headers values
func NewProjectsModelsPartialUpdateNotFound() *ProjectsModelsPartialUpdateNotFound {
	return &ProjectsModelsPartialUpdateNotFound{}
}

/*ProjectsModelsPartialUpdateNotFound handles this case with default header values.

Model not found
*/
type ProjectsModelsPartialUpdateNotFound struct {
}

func (o *ProjectsModelsPartialUpdateNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v0/{namespace}/projects/{project_pk}/models/{server}/][%d] projectsModelsPartialUpdateNotFound ", 404)
}

func (o *ProjectsModelsPartialUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*ProjectsModelsPartialUpdateBody projects models partial update body
swagger:model ProjectsModelsPartialUpdateBody
*/
type ProjectsModelsPartialUpdateBody struct {

	// method
	Method string `json:"method,omitempty"`

	// script
	Script string `json:"script,omitempty"`

	// server
	Server interface{} `json:"server,omitempty"`
}

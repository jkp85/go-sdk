package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IllumiDesk/go-sdk/models"
)

// ProjectsDeploymentsReplaceReader is a Reader for the ProjectsDeploymentsReplace structure.
type ProjectsDeploymentsReplaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsDeploymentsReplaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProjectsDeploymentsReplaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewProjectsDeploymentsReplaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectsDeploymentsReplaceOK creates a ProjectsDeploymentsReplaceOK with default headers values
func NewProjectsDeploymentsReplaceOK() *ProjectsDeploymentsReplaceOK {
	return &ProjectsDeploymentsReplaceOK{}
}

/*ProjectsDeploymentsReplaceOK handles this case with default header values.

Deployment updated.
*/
type ProjectsDeploymentsReplaceOK struct {
	Payload *models.Deployment
}

func (o *ProjectsDeploymentsReplaceOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsDeploymentsReplaceOK) Error() string {
	return fmt.Sprintf("[PUT /v1/{namespace}/projects/{project}/deployments/{deployment}/][%d] projectsDeploymentsReplaceOK  %+v", 200, o.Payload)
}

func (o *ProjectsDeploymentsReplaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Deployment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsDeploymentsReplaceBadRequest creates a ProjectsDeploymentsReplaceBadRequest with default headers values
func NewProjectsDeploymentsReplaceBadRequest() *ProjectsDeploymentsReplaceBadRequest {
	return &ProjectsDeploymentsReplaceBadRequest{}
}

/*ProjectsDeploymentsReplaceBadRequest handles this case with default header values.

Invalid data supplied.
*/
type ProjectsDeploymentsReplaceBadRequest struct {
	Payload *models.DeploymentError
}

func (o *ProjectsDeploymentsReplaceBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsDeploymentsReplaceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/{namespace}/projects/{project}/deployments/{deployment}/][%d] projectsDeploymentsReplaceBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectsDeploymentsReplaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IllumiDesk/go-sdk/models"
)

// ProjectsServersSSHTunnelsReplaceReader is a Reader for the ProjectsServersSSHTunnelsReplace structure.
type ProjectsServersSSHTunnelsReplaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsServersSSHTunnelsReplaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProjectsServersSSHTunnelsReplaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewProjectsServersSSHTunnelsReplaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectsServersSSHTunnelsReplaceOK creates a ProjectsServersSSHTunnelsReplaceOK with default headers values
func NewProjectsServersSSHTunnelsReplaceOK() *ProjectsServersSSHTunnelsReplaceOK {
	return &ProjectsServersSSHTunnelsReplaceOK{}
}

/*ProjectsServersSSHTunnelsReplaceOK handles this case with default header values.

SshTunnel updated
*/
type ProjectsServersSSHTunnelsReplaceOK struct {
	Payload *models.SSHTunnel
}

func (o *ProjectsServersSSHTunnelsReplaceOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsServersSSHTunnelsReplaceOK) Error() string {
	return fmt.Sprintf("[PUT /v1/{namespace}/projects/{project}/servers/{server}/ssh-tunnels/{tunnel}/][%d] projectsServersSshTunnelsReplaceOK  %+v", 200, o.Payload)
}

func (o *ProjectsServersSSHTunnelsReplaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SSHTunnel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsServersSSHTunnelsReplaceBadRequest creates a ProjectsServersSSHTunnelsReplaceBadRequest with default headers values
func NewProjectsServersSSHTunnelsReplaceBadRequest() *ProjectsServersSSHTunnelsReplaceBadRequest {
	return &ProjectsServersSSHTunnelsReplaceBadRequest{}
}

/*ProjectsServersSSHTunnelsReplaceBadRequest handles this case with default header values.

Invalid data supplied
*/
type ProjectsServersSSHTunnelsReplaceBadRequest struct {
	Payload *models.SSHTunnelError
}

func (o *ProjectsServersSSHTunnelsReplaceBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsServersSSHTunnelsReplaceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/{namespace}/projects/{project}/servers/{server}/ssh-tunnels/{tunnel}/][%d] projectsServersSshTunnelsReplaceBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectsServersSSHTunnelsReplaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SSHTunnelError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
